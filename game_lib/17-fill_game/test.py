import osimport requestsfrom selenium import webdriverfrom selenium.webdriver.chrome.options import Optionsfrom selenium.webdriver.common.by import Byfrom selenium.webdriver.chrome.service import Serviceimport timeimport socket# 设置无头浏览器chrome_options = Options()chrome_options.add_argument("--headless")  # 无头模式chrome_options.add_argument('--disable-gpu')# 设置WebDriver路径driver_path = r"D:\code\tools\chromedriver-win64\chromedriver.exe"  # 替换为你的chromedriver路径# 创建WebDriver对象service = Service(driver_path)# Function to handle WebDriver connection with retriesdef create_driver_with_retry(retries=3, delay=5):    for i in range(retries):        try:            driver = webdriver.Chrome(service=service, options=chrome_options)            return driver        except socket.error as e:            print(f"Connection error: {e}, retrying...")            time.sleep(delay)        except Exception as e:            print(f"Error: {e}")            break    return None# Initialize WebDriverdriver = create_driver_with_retry()if driver is None:    print("Failed to create WebDriver after multiple retries. Exiting.")    exit(1)city_list = ['flower','forest','tree','gress','butterfly']for city in city_list:    # 目标URL    url = f'https://image.baidu.com/search/index?tn=baiduimage&word={city}+city'    # 访问页面    try:        driver.get(url)    except Exception as e:        print(f"Failed to load URL for {city}: {e}")        continue    # 等待页面加载    time.sleep(3)    # 获取图片链接    img_urls = set()    for i in range(2):  # 控制爬取的页数，5页是一个示例，你可以调整        images = driver.find_elements(By.TAG_NAME, 'img')        for img in images:            img_url = img.get_attribute('src')            if img_url and img_url.startswith('http'):                img_urls.add(img_url)        # 滚动页面以加载更多图片        driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")        time.sleep(2)  # 等待页面加载更多图片    # 保存图片到本地    if not os.path.exists(city):        os.makedirs(city)    # 下载图片    for idx, img_url in enumerate(img_urls):        try:            img_data = requests.get(img_url).content            with open(f'{city}/{city}_{idx + 1}.png', 'wb') as f:                f.write(img_data)            print(f"图片 {idx + 1} 下载成功")        except Exception as e:            print(f"图片 {idx + 1} 下载失败，错误: {e}")# 关闭浏览器driver.quit()